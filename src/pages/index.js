import * as React from "react";
import Head from "next/head";
import { Button, Form, Input } from "antd";
import axios from "axios";
// import TextArea from "antd/es/input/TextArea";

export default function Home() {
  const [title, setTitle] = React.useState("");
  const [desc, setDesc] = React.useState("");

  const [blog, setBlog] = React.useState([]);

  const handleSubmit = () => {
    console.log(title, desc);
  };

  React.useEffect(() => {
    console.log("Here in useEffect");
    const getAllBlogs = async () => {
      if (process.env.NEXT_PUBLIC_NODE_ENV === "dev") {
        const data = await axios
          .get(`${process.env.NEXT_PUBLIC_API_URL}/api/blog`)
          .then((res) => {
            console.log(res.data);

            setBlog(res.data);
          })
          .catch((err) => {
            console.log(err);
          });

        console.log(blog);
      }
      if (process.env.NEXT_PUBLIC_NODE_ENV === "production") {
        const data = await axios
          .get(`${process.env.NEXT_PUBLIC_API_URL}/api/blog`)
          .then((res) => {
            console.log(res.data);

            setBlog(res.data);
          })
          .catch((err) => {
            console.log(err);
          });

        console.log("Blog", blog);
        console.log("data", data);
      }

      if (process.env.NODE_ENV === "production") {
        const data = await axios
          .get(`${process.env.NEXT_PUBLIC_API_URL}/api/blog`)
          .then((res) => {
            console.log(res.data);

            setBlog(res.data);
          })
          .catch((err) => {
            console.log(err);
          });

        console.log("Blog", blog);
        console.log("data", data);
      }
    };

    getAllBlogs();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {title}
        <Form
          name="basic"
          labelCol={{ span: 8 }}
          wrapperCol={{ span: 16 }}
          style={{ maxWidth: 600 }}
          initialValues={{ remember: true }}
          autoComplete="off">
          <Form.Item
            label="Title"
            // name="title"
            rules={[
              { required: true, message: "Please input your username!" },
            ]}>
            <Input
              onChange={(e) => {
                setTitle(e.target.value);
              }}
              value={title}
            />
          </Form.Item>

          <Form.Item
            label="Desc"
            // name="desc"
            rules={[
              { required: true, message: "Please input your username!" },
            ]}>
            {/* <TextArea
              rows={4}
              name="desc"
              placeholder="Description"
              value={desc}
              onChange={(e) => {
                setDesc(e.target.value);
              }}
            /> */}
          </Form.Item>

          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>
            <Button type="primary" htmlType="submit" onClick={handleSubmit}>
              Submit
            </Button>
          </Form.Item>
        </Form>
      </main>
    </>
  );
}
